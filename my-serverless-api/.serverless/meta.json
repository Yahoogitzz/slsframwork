{
  "D:\\AWS\\Projects\\slsframwork\\my-serverless-api\\serverless.ts": {
    "versionFramework": "4.11.0",
    "servicePath": "D:\\AWS\\Projects\\slsframwork\\my-serverless-api\\serverless.ts",
    "serviceConfigFileName": "serverless.ts",
    "service": {
      "provider": {
        "name": "aws",
        "stage": "dev"
      }
    },
    "provider": {
      "name": "aws",
      "stage": "dev"
    },
    "dashboard": {
      "isEnabledForService": false,
      "requiredAuthentication": false,
      "orgFeaturesInUse": null,
      "orgObservabilityIntegrations": null,
      "serviceAppId": null,
      "serviceProvider": null,
      "instanceParameters": null
    },
    "error": {
      "message": "\"service\" property is missing in serverless",
      "stack": "ServerlessError2: \"service\" property is missing in serverless\n    at Service.loadServiceFileParam (file:///C:/Users/Dhavall%20Rathhod/.serverless/releases/4.11.0/package/dist/sf-core.js:776:9299)\n    at Service.load (file:///C:/Users/Dhavall%20Rathhod/.serverless/releases/4.11.0/package/dist/sf-core.js:776:6834)\n    at Serverless.init (file:///C:/Users/Dhavall%20Rathhod/.serverless/releases/4.11.0/package/dist/sf-core.js:782:9806)\n    at runFramework (file:///C:/Users/Dhavall%20Rathhod/.serverless/releases/4.11.0/package/dist/sf-core.js:809:854)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async TraditionalRunner.run (file:///C:/Users/Dhavall%20Rathhod/.serverless/releases/4.11.0/package/dist/sf-core.js:805:28308)\n    at async route (file:///C:/Users/Dhavall%20Rathhod/.serverless/releases/4.11.0/package/dist/sf-core.js:843:2779)\n    at async Object.run (file:///C:/Users/Dhavall%20Rathhod/.serverless/releases/4.11.0/package/dist/sf-core.js:844:3661)\n    at async run2 (file:///C:/Users/Dhavall%20Rathhod/.serverless/releases/4.11.0/package/dist/sf-core.js:844:4814)",
      "code": "SERVICE_NAME_MISSING"
    },
    "serviceRawFile": "// import type { AWS } from '@serverless/typescript';\n\n// import hello from '@functions/hello';\n\n// const serverlessConfiguration: AWS = {\n//   service: 'my-serverless-api',\n//   frameworkVersion: '3',\n//   plugins: ['serverless-esbuild'],\n//   provider: {\n//     name: 'aws',\n//     runtime: 'nodejs14.x',\n//     apiGateway: {\n//       minimumCompressionSize: 1024,\n//       shouldStartNameWithService: true,\n//     },\n//     environment: {\n//       AWS_NODEJS_CONNECTION_REUSE_ENABLED: '1',\n//       NODE_OPTIONS: '--enable-source-maps --stack-trace-limit=1000',\n//     },\n//   },\n//   // import the function via paths\n//   functions: { hello },\n//   package: { individually: true },\n//   custom: {\n//     esbuild: {\n//       bundle: true,\n//       minify: false,\n//       sourcemap: true,\n//       exclude: ['aws-sdk'],\n//       target: 'node14',\n//       define: { 'require.resolve': undefined },\n//       platform: 'node',\n//       concurrency: 10,\n//     },\n//   },\n// };\n\n// module.exports = serverlessConfiguration;\n",
    "command": [
      "deploy"
    ],
    "options": {
      "stage": "dev"
    },
    "orgId": "5119744f-d759-4f0f-813a-ee9f893db0a7",
    "orgName": "yahooslsfw",
    "userId": "Rb85Bt0d3d7M3VgfwJ",
    "userName": "yahooslsfw",
    "serviceProviderAwsAccountId": "312828120454",
    "serviceProviderAwsCfStackId": null,
    "serviceProviderAwsCfStackCreated": null,
    "serviceProviderAwsCfStackUpdated": null,
    "serviceProviderAwsCfStackStatus": null,
    "serviceProviderAwsCfStackOutputs": null
  }
}